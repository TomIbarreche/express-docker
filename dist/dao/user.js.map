{"version":3,"sources":["../../src/dao/user.js"],"names":["config","require","UserDao","createUser","firstName","email","age","user","insert","first_name","returning","err","next","ApiError","internalServerError","getAllUsers","users","select","then","res","forEach","element","push","getUserById","userId","where","updateUser","body","userToUpdate","key","value","Object","entries","update","deleteUserById","deletedUser","del","module","exports"],"mappings":";;AAAA,MAAMA,SAAQC,QAAQ,UAAR,CAAd;AACA,MAAMC,OAAN,CAAc;AACV,UAAMC,UAAN,CAAiBC,SAAjB,EAA4BC,KAA5B,EAAmCC,GAAnC,EAAwC;AACpC,YAAI;AACA,kBAAM,CAACC,IAAD,IAAS,MAAMP,OAAO,OAAP,EAAgBQ,MAAhB,CAAuB;AACxCC,4BAAYL,SAD4B;AAExCC,uBAAOA,KAFiC;AAGxCC,qBAAKA;AAHmC,aAAvB,EAIlBI,SAJkB,CAIR,CAAC,IAAD,EAAO,YAAP,EAAoB,OAApB,EAA6B,KAA7B,CAJQ,CAArB;AAKA,mBAAO,EAAC,QAAQH,IAAT,EAAP;AACH,SAPD,CAOE,OAAOI,GAAP,EAAY;AACVC,iBAAKC,SAASC,mBAAT,CAA6B,4BAA7B,CAAL;AACH;AAEJ;AACD,UAAMC,WAAN,GAAoB;AAChB,YAAIC,QAAQ,EAAZ;AACA,eAAOhB,OAAO,OAAP,EAAgBiB,MAAhB,CAAuB,GAAvB,EACNC,IADM,CACAC,GAAD,IAAS;AACXA,gBAAIC,OAAJ,CAAYC,WAAW;AACnBL,sBAAMM,IAAN,CAAWD,OAAX;AACH,aAFD;AAGA,mBAAOL,KAAP;AACH,SANM,CAAP;AAOH;;AAED,UAAMO,WAAN,CAAkBC,MAAlB,EAA0B;AACtB,eAAOxB,OAAO,OAAP,EAAgByB,KAAhB,CAAsB,IAAtB,EAA4BD,MAA5B,EACNN,IADM,CACAC,GAAD,IAAS;AACX,mBAAOA,IAAI,CAAJ,CAAP;AACH,SAHM,CAAP;AAIH;;AAED,UAAMO,UAAN,CAAiBF,MAAjB,EAAyBG,IAAzB,EAA+B;;AAE3B,cAAMC,eAAe,MAAM5B,OAAO,OAAP,EAAgByB,KAAhB,CAAsB,IAAtB,EAA4BD,MAA5B,EAAoCd,SAApC,CAA8C,CAAC,IAAD,EAAO,YAAP,EAAoB,OAApB,EAA6B,KAA7B,CAA9C,CAA3B;AACA,aAAK,MAAM,CAACmB,GAAD,EAAMC,KAAN,CAAX,IAA2BC,OAAOC,OAAP,CAAeL,IAAf,CAA3B,EAAgD;AAC5CC,yBAAaC,GAAb,IAAoBC,KAApB;AACH;AACD,eAAO9B,OAAO,OAAP,EAAgByB,KAAhB,CAAsB,IAAtB,EAA4BD,MAA5B,EAAoCS,MAApC,CAA2C;AAC9CxB,wBAAYmB,aAAaxB,SADqB;AAE9CC,mBAAOuB,aAAavB,KAF0B;AAG9CC,iBAAKsB,aAAatB;AAH4B,SAA3C,EAIJ,CAAC,IAAD,EAAO,YAAP,EAAqB,OAArB,EAA8B,KAA9B,CAJI,CAAP;AAKH;;AAED,UAAM4B,cAAN,CAAqBV,MAArB,EAA6B;AACzB,cAAMW,cAAc,MAAMnC,OAAO,OAAP,EAAgByB,KAAhB,CAAsB,IAAtB,EAA4BD,MAA5B,EAAoCY,GAApC,CAAwC,CAAC,IAAD,CAAxC,CAA1B;AACA,eAAOD,YAAY,CAAZ,CAAP;AACH;AAhDS;;AAmDdE,OAAOC,OAAP,GAAiB,IAAIpC,OAAJ,EAAjB","file":"user.js","sourcesContent":["const config =require('../db/db');\r\nclass UserDao {\r\n    async createUser(firstName, email, age) {\r\n        try {\r\n            const [user] = await config('users').insert({\r\n                first_name: firstName,\r\n                email: email,\r\n                age: age \r\n            }).returning(['id', 'first_name','email', 'age']);\r\n            return {\"user\": user};\r\n        } catch (err) {\r\n            next(ApiError.internalServerError(\"Oups! Something went wrong\"));\r\n        }\r\n        \r\n    }\r\n    async getAllUsers() {\r\n        let users = [];\r\n        return config('users').select('*')\r\n        .then((res) => {\r\n            res.forEach(element => {\r\n                users.push(element);\r\n            });\r\n            return users;\r\n        })\r\n    }\r\n\r\n    async getUserById(userId) {\r\n        return config('users').where('id', userId)\r\n        .then((res) => {\r\n            return res[0];\r\n        })\r\n    }\r\n\r\n    async updateUser(userId, body) {\r\n\r\n        const userToUpdate = await config('users').where('id', userId).returning(['id', 'first_name','email', 'age']);\r\n        for (const [key, value] of Object.entries(body)){\r\n            userToUpdate[key] = value;\r\n        }\r\n        return config('users').where('id', userId).update({\r\n            first_name: userToUpdate.firstName,\r\n            email: userToUpdate.email,\r\n            age: userToUpdate.age\r\n        }, ['id', 'first_name', 'email', 'age'])\r\n    }\r\n\r\n    async deleteUserById(userId) {\r\n        const deletedUser = await config('users').where('id', userId).del(['id']);\r\n        return deletedUser[0]; \r\n    }\r\n}\r\n\r\nmodule.exports = new UserDao();"]}