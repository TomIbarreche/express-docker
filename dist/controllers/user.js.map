{"version":3,"sources":["../../src/controllers/user.js"],"names":["ApiError","require","json","reporters","userDAO","UserController","createUser","req","res","next","firstName","email","age","body","id","status","err","internalServerError","getAllUsers","users","console","log","getUserById","userId","params","user","routeNotFound","updateUser","updatedUser","deleteUserById","deletedUser","module","exports"],"mappings":"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","file":"user.js","sourcesContent":["const ApiError = require('../error/ApiError');\r\nconst { json } = require('express');\r\nconst { reporters } = require('mocha');\r\nconst userDAO = require('../dao/user');\r\n\r\nclass UserController {\r\n    async createUser(req, res, next) {\r\n        try {\r\n            const {firstName, email, age} = req.body;\r\n            const id = await userDAO.createUser(firstName, email,age);\r\n            res.status(201).json(id);\r\n        } catch(err) {\r\n            next(ApiError.internalServerError(\"Oups! Something went wrong\"));\r\n        }\r\n    }\r\n\r\n    async getAllUsers(req, res, next){\r\n        try{\r\n            const users = await userDAO.getAllUsers();\r\n            res.status(201).json(users);\r\n        }catch(err) {\r\n            console.log(err)\r\n            res.status(500);\r\n        }\r\n    }\r\n\r\n    async getUserById(req, res, next) {\r\n        try{\r\n            const userId = req.params.id\r\n            const user = await userDAO.getUserById(userId);\r\n            if (!user){\r\n                next(ApiError.routeNotFound(\"Can't find this user\"));\r\n                return\r\n            }\r\n            res.status(201).json(user);\r\n        }catch(err) {\r\n            next(ApiError.internalServerError(\"Oups! Something went wrong\"));\r\n        }\r\n    }\r\n\r\n    async updateUser(req, res, next) {\r\n        try{\r\n            const userId = req.params.id;\r\n            const updatedUser = await userDAO.updateUser(userId, req.body);\r\n            if (!updatedUser[0]){\r\n                next(ApiError.routeNotFound(\"Can't find this user\"));\r\n                return\r\n            }\r\n            res.status(201).json(updatedUser);\r\n        }catch(err) {\r\n            next(ApiError.internalServerError(\"Oups! Something went wrong\"));\r\n        }\r\n    }\r\n\r\n    async deleteUserById(req, res, next) {\r\n        try{\r\n            const userId = req.params.id;\r\n            const deletedUser = await userDAO.deleteUserById(userId);\r\n            if (!deletedUser){\r\n                next(ApiError.routeNotFound(\"Can't find this user\"));\r\n                return\r\n            }\r\n            res.status(201).json(deletedUser);\r\n        }catch(err){\r\n            next(ApiError.internalServerError(\"Oups! Something went wrong\"));\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = new UserController();"]}